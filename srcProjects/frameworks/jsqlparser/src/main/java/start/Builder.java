package start;import net.sf.jsqlparser.JSQLParserException;import net.sf.jsqlparser.expression.LongValue;import net.sf.jsqlparser.expression.operators.relational.ExpressionList;import net.sf.jsqlparser.expression.operators.relational.ItemsListVisitor;import net.sf.jsqlparser.expression.operators.relational.MultiExpressionList;import net.sf.jsqlparser.parser.CCJSqlParserUtil;import net.sf.jsqlparser.schema.Column;import net.sf.jsqlparser.schema.Table;import net.sf.jsqlparser.statement.insert.Insert;import net.sf.jsqlparser.statement.select.PlainSelect;import net.sf.jsqlparser.statement.select.Select;import net.sf.jsqlparser.statement.select.SubSelect;import net.sf.jsqlparser.util.SelectUtils;/** * Created by Hiram on 2016/4/1. */public class Builder {	public static void main(String[] args) throws JSQLParserException {		Select select = (Select) CCJSqlParserUtil.parse("select * from mytb where id = 1 and b in ('1','2','3')");		PlainSelect selectBody = (PlainSelect) select.getSelectBody();//		Select select = SelectUtils.buildSelectFromTableAndExpressions(new Table("mytable"), "a+b", "test");		System.out.println(select);	}	private static void insertBuild() throws JSQLParserException {		Insert insert = (Insert) CCJSqlParserUtil.parse("insert into mytable (col1) values (1)");		System.out.println(insert.toString());		//adding a column		insert.getColumns().add(new Column("col2"));		//adding a value using a visitor		insert.getItemsList().accept(new ItemsListVisitor() {			public void visit(SubSelect subSelect) {				throw new UnsupportedOperationException("Not supported yet.");			}			public void visit(ExpressionList expressionList) {				expressionList.getExpressions().add(new LongValue(5));			}			public void visit(MultiExpressionList multiExprList) {				throw new UnsupportedOperationException("Not supported yet.");			}		});		System.out.println(insert.toString());		//adding another column		insert.getColumns().add(new Column("col3"));		//adding another value (the easy way)		((ExpressionList) insert.getItemsList()).getExpressions().add(new LongValue(10));		System.out.println(insert.toString());	}}